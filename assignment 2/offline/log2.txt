
Line no 1: TOKEN <ID> Lexeme main found

ScopeTable # 1
5 --> < main : ID > 



Line no 1: TOKEN <LPAREN> Lexeme ( found

Line no 1: TOKEN <RPAREN> Lexeme ) found

Line no 1: TOKEN <LCURL> Lexeme { found

Line no 2: TOKEN <CHAR> Lexeme char found

Line no 2: TOKEN <ID> Lexeme ch found

ScopeTable # 1.1
1 --> < ch : ID > 


ScopeTable # 1
5 --> < main : ID > 



Line no 2: TOKEN <ASSIGNOP> Lexeme = found

Line no 2: TOKEN <CONST_CHAR> Lexeme 'b' found --> <CONST_CHAR,b> 

ScopeTable # 1.1
1 --> < ch : ID > 
6 --> < 'b' : CONST_CHAR > 


ScopeTable # 1
5 --> < main : ID > 



Line no 2: TOKEN <SEMICOLON> Lexeme ; found

Line no 3: TOKEN <CHAR> Lexeme char found

Line no 3: TOKEN <ID> Lexeme ch1 found

ScopeTable # 1.1
1 --> < ch : ID > 
2 --> < ch1 : ID > 
6 --> < 'b' : CONST_CHAR > 


ScopeTable # 1
5 --> < main : ID > 



Line no 3: TOKEN <ASSIGNOP> Lexeme = found

Line no 3: TOKEN <CONST_CHAR> Lexeme '\n' found --> <CONST_CHAR,
> 

ScopeTable # 1.1
1 --> < ch : ID > < '\n' : CONST_CHAR > 
2 --> < ch1 : ID > 
6 --> < 'b' : CONST_CHAR > 


ScopeTable # 1
5 --> < main : ID > 



Line no 3: TOKEN <SEMICOLON> Lexeme ; found

Line no 4: TOKEN <FLOAT> Lexeme float found

Line no 4: TOKEN <ID> Lexeme f found

ScopeTable # 1.1
1 --> < ch : ID > < '\n' : CONST_CHAR > 
2 --> < ch1 : ID > 
4 --> < f : ID > 
6 --> < 'b' : CONST_CHAR > 


ScopeTable # 1
5 --> < main : ID > 



Line no 4: TOKEN <ASSIGNOP> Lexeme = found

Line no 4: TOKEN <CONST_FLOAT> Lexeme 5E4 found

ScopeTable # 1.1
1 --> < ch : ID > < '\n' : CONST_CHAR > 
2 --> < ch1 : ID > 
3 --> < 5E4 : CONST_FLOAT > 
4 --> < f : ID > 
6 --> < 'b' : CONST_CHAR > 


ScopeTable # 1
5 --> < main : ID > 



Line no 4: TOKEN <SEMICOLON> Lexeme ; found

Line no 5: TOKEN <INT> Lexeme int found

Line no 5: TOKEN <ID> Lexeme _3d found

ScopeTable # 1.1
1 --> < ch : ID > < '\n' : CONST_CHAR > < _3d : ID > 
2 --> < ch1 : ID > 
3 --> < 5E4 : CONST_FLOAT > 
4 --> < f : ID > 
6 --> < 'b' : CONST_CHAR > 


ScopeTable # 1
5 --> < main : ID > 



Line no 5: TOKEN <SEMICOLON> Lexeme ; found

Line no 6: TOKEN <INT> Lexeme int found

Line no 6: TOKEN <ID> Lexeme _4 found

ScopeTable # 1.1
1 --> < ch : ID > < '\n' : CONST_CHAR > < _3d : ID > 
2 --> < ch1 : ID > 
3 --> < 5E4 : CONST_FLOAT > 
4 --> < f : ID > < _4 : ID > 
6 --> < 'b' : CONST_CHAR > 


ScopeTable # 1
5 --> < main : ID > 



Line no 6: TOKEN <SEMICOLON> Lexeme ; found

Line no 7: TOKEN <ID> Lexeme ch found

ScopeTable # 1.1
1 --> < ch : ID > < '\n' : CONST_CHAR > < _3d : ID > 
2 --> < ch1 : ID > 
3 --> < 5E4 : CONST_FLOAT > 
4 --> < f : ID > < _4 : ID > 
6 --> < 'b' : CONST_CHAR > 


ScopeTable # 1
5 --> < main : ID > 



Line no 7: TOKEN <ASSIGNOP> Lexeme = found

Line no 7: TOKEN <CONST_CHAR> Lexeme '\t' found --> <CONST_CHAR,	> 

ScopeTable # 1.1
1 --> < ch : ID > < '\n' : CONST_CHAR > < _3d : ID > 
2 --> < ch1 : ID > 
3 --> < 5E4 : CONST_FLOAT > 
4 --> < f : ID > < _4 : ID > 
6 --> < 'b' : CONST_CHAR > < '\t' : CONST_CHAR > 


ScopeTable # 1
5 --> < main : ID > 



Line no 7: TOKEN <SEMICOLON> Lexeme ; found

Line no 8: TOKEN <CHAR> Lexeme char found

Line no 8: TOKEN <ID> Lexeme c found

ScopeTable # 1.1
1 --> < ch : ID > < '\n' : CONST_CHAR > < _3d : ID > < c : ID > 
2 --> < ch1 : ID > 
3 --> < 5E4 : CONST_FLOAT > 
4 --> < f : ID > < _4 : ID > 
6 --> < 'b' : CONST_CHAR > < '\t' : CONST_CHAR > 


ScopeTable # 1
5 --> < main : ID > 



Line no 8: TOKEN <LTHIRD> Lexeme [ found

Line no 8: TOKEN <RTHIRD> Lexeme ] found

Line no 8: TOKEN <ASSIGNOP> Lexeme = found

Line no 8: TOKEN <STRING> Lexeme "ab\td" found

Line no 8: TOKEN <SEMICOLON> Lexeme ; found

Line no 9: TOKEN <ID> Lexeme printf found

ScopeTable # 1.1
1 --> < ch : ID > < '\n' : CONST_CHAR > < _3d : ID > < c : ID > < printf : ID > 
2 --> < ch1 : ID > 
3 --> < 5E4 : CONST_FLOAT > 
4 --> < f : ID > < _4 : ID > 
6 --> < 'b' : CONST_CHAR > < '\t' : CONST_CHAR > 


ScopeTable # 1
5 --> < main : ID > 



Line no 9: TOKEN <LPAREN> Lexeme ( found

Line no 9: TOKEN <STRING> Lexeme "abc\
def\
ghi" found

Line no 9: TOKEN <RPAREN> Lexeme ) found

Line no 9: TOKEN <SEMICOLON> Lexeme ; found

Line no 10: TOKEN <MULOP> Lexeme / found

Line no 10: TOKEN <MULOP> Lexeme / found

Line no 10: TOKEN <ID> Lexeme a found

ScopeTable # 1.1
1 --> < ch : ID > < '\n' : CONST_CHAR > < _3d : ID > < c : ID > < printf : ID > 
2 --> < ch1 : ID > 
3 --> < 5E4 : CONST_FLOAT > 
4 --> < f : ID > < _4 : ID > 
6 --> < 'b' : CONST_CHAR > < '\t' : CONST_CHAR > < a : ID > 


ScopeTable # 1
5 --> < main : ID > 



Line no 10: TOKEN <ID> Lexeme comment found

ScopeTable # 1.1
1 --> < ch : ID > < '\n' : CONST_CHAR > < _3d : ID > < c : ID > < printf : ID > < comment : ID > 
2 --> < ch1 : ID > 
3 --> < 5E4 : CONST_FLOAT > 
4 --> < f : ID > < _4 : ID > 
6 --> < 'b' : CONST_CHAR > < '\t' : CONST_CHAR > < a : ID > 


ScopeTable # 1
5 --> < main : ID > 



Line no 12: TOKEN <COMMENT> Lexeme /** another
*** comment ***/ found

Line no 13: TOKEN <RETURN> Lexeme return found

Line no 13: TOKEN <CONST_INT> Lexeme 0 found

ScopeTable # 1.1
1 --> < ch : ID > < '\n' : CONST_CHAR > < _3d : ID > < c : ID > < printf : ID > < comment : ID > 
2 --> < ch1 : ID > 
3 --> < 5E4 : CONST_FLOAT > 
4 --> < f : ID > < _4 : ID > 
6 --> < 'b' : CONST_CHAR > < '\t' : CONST_CHAR > < a : ID > < 0 : CONST_INT > 


ScopeTable # 1
5 --> < main : ID > 



Line no 13: TOKEN <SEMICOLON> Lexeme ; found

Line no 14: TOKEN <RCURL> Lexeme } found
