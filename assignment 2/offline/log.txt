
Line no 1: TOKEN <ID> Lexeme main found

Line no 1: TOKEN <LPAREN> Lexeme ( found

Line no 1: TOKEN <RPAREN> Lexeme ) found

Line no 1: TOKEN <LCURL> Lexeme { found

Line no 2: TOKEN <CHAR> Lexeme char found

Line no 2: TOKEN <ID> Lexeme ch found

Line no 2: TOKEN <ASSIGNOP> Lexeme = found

Line no 2: TOKEN <SEMICOLON> Lexeme ; found

Line no 3: TOKEN <CHAR> Lexeme char found

Line no 3: TOKEN <ID> Lexeme ch1 found

Line no 3: TOKEN <ASSIGNOP> Lexeme = found

Line no 3: TOKEN <SEMICOLON> Lexeme ; found

Line no 4: TOKEN <FLOAT> Lexeme float found

Line no 4: TOKEN <ID> Lexeme f found

Line no 4: TOKEN <ASSIGNOP> Lexeme = found

Line no 4: TOKEN <CONST_FLOAT> Lexeme 5E4 found

Line no 4: TOKEN <SEMICOLON> Lexeme ; found

Line no 5: TOKEN <INT> Lexeme int found

Line no 5: TOKEN <ID> Lexeme _3d found

Line no 5: TOKEN <SEMICOLON> Lexeme ; found

Line no 6: TOKEN <INT> Lexeme int found

Line no 6: TOKEN <ID> Lexeme _4 found

Line no 6: TOKEN <SEMICOLON> Lexeme ; found

Line no 7: TOKEN <ID> Lexeme ch found

Line no 7: TOKEN <ASSIGNOP> Lexeme = found

Line no 7: TOKEN <SEMICOLON> Lexeme ; found

Line no 8: TOKEN <CHAR> Lexeme char found

Line no 8: TOKEN <ID> Lexeme c found

Line no 8: TOKEN <LTHIRD> Lexeme [ found

Line no 8: TOKEN <RTHIRD> Lexeme ] found

Line no 8: TOKEN <ASSIGNOP> Lexeme = found

Line no 8: TOKEN <SEMICOLON> Lexeme ; found

Line no 9: TOKEN <ID> Lexeme printf found

Line no 9: TOKEN <LPAREN> Lexeme ( found

Line no 9: TOKEN <RPAREN> Lexeme ) found

Line no 9: TOKEN <SEMICOLON> Lexeme ; found

Line no 10: TOKEN <MULOP> Lexeme / found

Line no 10: TOKEN <MULOP> Lexeme / found

Line no 10: TOKEN <ID> Lexeme a found

Line no 10: TOKEN <ID> Lexeme comment found

Line no 13: TOKEN <RETURN> Lexeme return found

Line no 13: TOKEN <CONST_INT> Lexeme 0 found

Line no 13: TOKEN <SEMICOLON> Lexeme ; found

Line no 14: TOKEN <RCURL> Lexeme } found
